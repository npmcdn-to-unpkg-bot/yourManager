{"version":3,"sources":["+admin/admin.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoD,eAAe,CAAC,CAAA;AACpE,8BAA2B,iBAAiB,CAAC,CAAA;AAE7C,QAAO,uBAAuB,CAAC,CAAA;AAC/B,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,gCAAgC,CAAC,CAAA;AACxC,QAAO,wCAAwC,CAAC,CAAA;AAChD,QAAO,6BAA6B,CAAC,CAAA;AACrC,QAAO,6BAA6B,CAAC,CAAA;AACrC,uBAAuC,iBAAiB,CAAC,CAAA;AAUzD;IAMI,wBAAoB,YAA0B,EAC1B,MAAc,EACd,KAAqB;QAFrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QALzC,SAAI,GAAG,YAAY,CAAC;QACb,iBAAY,GAAG,EAAE,CAAC;IAKzB,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAUC;QARG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK;aAChB,MAAM;aACN,SAAS,CAAC,UAAA,MAAM;YACb,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,CAAC,CAAC,CAAC;IAEX,CAAC;IAED,oCAAW,GAAX,UAAY,KAAY;QAAxB,iBAOC;QALG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,SAAS,CACjD,UAAA,GAAG;YACC,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC;QACnC,CAAC,EACD,UAAA,KAAK,IAAK,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;IAClD,CAAC;IAED,oCAAW,GAAX;QACI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAjCF;QAAC,YAAK,EAAE;;+DAAA;IARX;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAC,MAAM,CAAC,EAAE;YAClB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAC,CAAC,qBAAqB,CAAC;SACpC,CAAC;;sBAAA;IAuCF,qBAAC;AAAD,CArCA,AAqCC,IAAA;AArCY,sBAAc,iBAqC1B,CAAA","file":"admin.component.js","sourcesContent":["import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport {AdminService} from './admin.service';\nimport {logistics} from '../shared/model/logistics';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n    moduleId:module.id,\n    selector: 'ym-admin',\n    templateUrl: 'admin.component.html',\n    styleUrls:['admin.component.css'],\n})\n\nexport class AdminComponent implements OnInit, OnDestroy {\n   @Input() public allocatedAssetsList: logistics[];\n    private sub: any;\n    mode = 'Observable';\n    public errorMessage = '';\n    public selectedId: string;\n    constructor(private adminService: AdminService,\n                private router: Router,\n                private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n\n        this.sub = this.route\n            .params\n            .subscribe(params => {\n                this.selectedId = params['id'];\n                this.listByEmpId(this.selectedId);\n\n            });\n\n    }\n\n    listByEmpId(empId:string) {\n\n        this.adminService.getAllocatedAssets(empId).subscribe(\n            res => {\n                this.allocatedAssetsList = res;\n            },\n            error =>  this.errorMessage = <any>error);\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n\n}\n"]}